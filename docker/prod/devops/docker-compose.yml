version: "2"
services:
  cibar-nexus:
    image: sonatype/nexus3:3.56.0
    ports:
      - "21081:8081"
      - "21901:9101"
      - "21903:9103"
      - "21911:9201"
      - "21912:9202"
    volumes:
      - "nexus-data:/nexus-data:z"
    networks:
      devops:

  cibar-sonarqube:
    image: sonarqube:lts-community
    depends_on:
      - cibar-sonarqube-database
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://cibar-sonarqube-database:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - prod_sonarqube_data:/opt/sonarqube/data
      - prod_sonarqube_extensions:/opt/sonarqube/extensions
      - prod_sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "21900:9000"

  cibar-sonarqube-database:
    image: postgres:12
    environment:
      POSTGRES_DB: sonar
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - cibar-sonarqube-postgresql:/var/lib/postgresql
      - cibar-sonarqube-postgresql-data:/var/lib/postgresql/data

  cibar-docker-dind:
    image: docker:dind
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    privileged: true
    ports:
      - "2376:2376"
    volumes:
      - "docker-certs:/certs/client:z"
      - "jenkins-data:/var/jenkins_home:z"
    networks:
      devops:
        aliases:
          - docker

  cibar-jenkins-blueocean:
    image: jenkinsci/blueocean:1.25.7
    environment:
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
    ports:
      - "21080:8080"
      - "21050:50000"
    volumes:
      - "docker-certs:/certs/client:ro"
      - "jenkins-data:/var/jenkins_home:z"
    networks:
      devops:

volumes:
  nexus-data:
  prod_sonarqube_data:
    external: true
  prod_sonarqube_extensions:
    external: true
  prod_sonarqube_logs:
    external: true
  cibar-sonarqube-postgresql:
  cibar-sonarqube-postgresql-data:
  docker-certs:
  jenkins-data:

networks:
  devops:
